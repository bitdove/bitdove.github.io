<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>DNS on 缘起性空</title>
        <link>https://bitdove.github.io/tags/dns/</link>
        <description>Recent content in DNS on 缘起性空</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh</language>
        <copyright>bitdove. All Rights Reserved.</copyright>
        <lastBuildDate>Thu, 06 May 2021 00:44:05 -0700</lastBuildDate><atom:link href="https://bitdove.github.io/tags/dns/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【一文读懂】DNS协议</title>
        <link>https://bitdove.github.io/posts/dns-protocol/</link>
        <pubDate>Thu, 06 May 2021 00:44:05 -0700</pubDate>
        
        <guid>https://bitdove.github.io/posts/dns-protocol/</guid>
        <description>&lt;h1 id=&#34;什么是dns&#34;&gt;什么是DNS？
&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;DNS是&lt;strong&gt;D&lt;/strong&gt;omain &lt;strong&gt;N&lt;/strong&gt;ame &lt;strong&gt;S&lt;/strong&gt;ystem的首字母缩写，即&lt;strong&gt;域名系统&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网络上的主机有两种标识方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域名：如www.baidu.com。优点是人们喜欢，容易记；缺点是机器不喜欢，路由器无法处理。&lt;/li&gt;
&lt;li&gt;IP地址：如39.156.69.79。优点是机器喜欢，容易处理；缺点是人们不喜欢，不好记。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了折中人类和机器不同的偏好，我们需要一种能&lt;strong&gt;从域名转换到IP地址&lt;/strong&gt;的服务，这就是DNS的主要任务。&lt;/p&gt;
&lt;p&gt;DNS协议采用客户端/服务器模型，DNS协议位于五层网络模型中的应用层，在进行域名解析时其传输层采用UDP协议，其知名端口号为53。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS协议由两部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;域名解析，用于执行对DNS特定名称查询的查询/响应协议；&lt;/li&gt;
&lt;li&gt;区域传输：用于交换数据库记录的协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于域名解析，由于数据量小，DNS协议采用UDP协议，知名端口号为53；&lt;/p&gt;
&lt;p&gt;对于区域传输，由于数据量大，DNS协议采用TCP协议，知名端口号为53。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;dns服务器层次结构&#34;&gt;DNS服务器层次结构
&lt;/h1&gt;&lt;p&gt;DNS使用了大量的DNS服务器，它们以&lt;strong&gt;层次方式&lt;/strong&gt;组织并且分布在全世界范围内。不存在一台DNS服务器拥有因特网上所有域名的映射。&lt;/p&gt;
&lt;p&gt;大致说来，有3种类型的DNS服务器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根DNS服务器：根DNS服务器提供顶级域名DNS服务器的IP地址；&lt;/li&gt;
&lt;li&gt;顶级域名DNS服务器：顶级域名DNS服务器提供权威DNS服务器的IP地址；&lt;/li&gt;
&lt;li&gt;权威DNS服务器：权威DNS服务器提供该组织的可访问域名的IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;比如百度在因特网上有很多可以访问的域名，如百度首页baidu.com、百度贴吧tieba.baidu.com、百度新闻news.baidu.com，百度的权威服务器负责提供这些域名的IP地址。百度可以自己建权威DNS服务器，也可以花钱让中国电信这样的ISP帮它维护权威DNS服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这三种类型的DNS服务器以下图的层次结构组织起来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bitdove/PicsBed_1/main/DNS-protocol/hier-structure.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;还有一种DNS服务器，叫&lt;strong&gt;本地DNS服务器&lt;/strong&gt;，不在上述的DNS服务器层次结构中。本地DNS服务器就是用DHCP获得的配置信息中的DNS服务器。本地DNS服务器通常离我们的主机比较近，通常不超过几个路由器的距离。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当主机发岀DNS请求时，该请求被发往本地DNS服务器，它起着代理的作用，并将该请求转发到DNS服务器层次构中，后边将详细讨论。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;dns缓存&#34;&gt;DNS缓存
&lt;/h1&gt;&lt;p&gt;为了改善时延性并减少在因特网上到处传输的DNS报文数，DNS广泛使用了&lt;strong&gt;缓存技术&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在一个请求链中，当某DNS服务器接收一个DNS回答 (例如，包含某域名到IP地址的映射)时，它能将映射缓存在本地存储器中。这样下次如果有对同样域名的DNS查询到达该DNS服务器时，它可以从自己的缓存中找出该域名对应的IP地址，直接返回给请求者，而不用再去问其他DNS服务器。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于域名与IP的映射不是永久的，所以DNS缓存有一个生存时间（TTL）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;dns资源记录类型&#34;&gt;DNS资源记录类型
&lt;/h1&gt;&lt;p&gt;虽然DNS通常用来将域名转换为对应的IP地址，但是它也有其他功能，区分这些功能的方法就是使用不同的&lt;strong&gt;资源记录类型&lt;/strong&gt;。这里我们只关注以下四种资源记录类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A：提供域名到IPv4地址的映射；&lt;/li&gt;
&lt;li&gt;AAAA：提供域名到IPv6地址的映射；&lt;/li&gt;
&lt;li&gt;NS：用来指定该域名由哪个DNS服务器来进行解析；&lt;/li&gt;
&lt;li&gt;CNAME：允许多个域名映射到同一IP地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;对于CNAME，我记得，当时用GitHub建个人博客时用到过，默认的地址xgx127.github.io用CNAME映射到我买的域名xushark.com，然后用A记录把xushark.com映射到我的云服务器的IP地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;dns工作流程&#34;&gt;DNS工作流程
&lt;/h1&gt;&lt;p&gt;下面以一个简单例子来描述DNS的工作流程。本例中我们假设没有DNS缓存。&lt;/p&gt;
&lt;p&gt;假设主机cse.nyu.edu想知道主机gaia.cs.umass.edu的IP地址。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主机cse.nyu.edu首先向它的本地DNS服务器dns. nyu. edu发送一个DNS查询报文。 DNS查询报文内封装有要查询的域名gaia.cs.umass.edu；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于假定无缓存，本地DNS服务器将查询报文转发到根DNS服务器；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根DNS服务器注意到其edu前缀，向本地DNS服务器返回负责edu的顶级域名DNS服务器的IP地址列表；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地DNS服务器则再次向这些顶级域名DNS服务器之一发送查询报文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;顶级域名DNS服务器（edu）注意到umass.edu前缀，并返回权威DNS服务器的IP地址进行响应，该权威DNS服务器是负责马&lt;/p&gt;
&lt;p&gt;萨诸塞大学的dns.umass.edu；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地DNS服务器向dns.umass.edu发送查询报文；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;权威DNS服务器（dns.umass.edu）用gaia. cs. umass. edu的IP地址进行响应；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地DNS服务器将gaia.cs.umass.edu的IP地址反馈给主机cse.nyu.edu。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bitdove/PicsBed_1/main/DNS-protocol/DNS-server-interaction.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;理论上讲，任何DNS查询既可以是迭代的也可以是递归的；&lt;/p&gt;
&lt;p&gt;实践上，通常遵循上图的模式，请求主机到本地DNS服务器的查询是递归的，其余的查询是迭代的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;dns消息格式&#34;&gt;DNS消息格式
&lt;/h1&gt;&lt;p&gt;基本的DNS消息以固定的12字节头部开始，其后跟随4个可变长度的区段：问题（或查询）、回答、授权记录和额外信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bitdove/PicsBed_1/main/DNS-protocol/DNS-message.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;事务ID：由客户端设置，由服务器返回。客户端用它来匹配响应与查询；&lt;/li&gt;
&lt;li&gt;QR：0表示查询消息，1表示响应消息；&lt;/li&gt;
&lt;li&gt;OpCode：0表示标准查询（查询和响应），4表示通知，5表示更新，其他值弃用；&lt;/li&gt;
&lt;li&gt;AA：表示授权回答（与缓存回答相对）；&lt;/li&gt;
&lt;li&gt;TC：表示“可截断的”。使用UDP时，它表示当应答的总长度超过512字节时，只返回前512个字节；&lt;/li&gt;
&lt;li&gt;RD：表示“期望递归”。在查询中设置，在响应中返回。它告诉服务器执行递归查询；&lt;/li&gt;
&lt;li&gt;RA：表示“递归可用”。如果服务器支持递归查询，则在响应中设置该字段；&lt;/li&gt;
&lt;li&gt;Z：目前Z字段必须为0，为将来而保留；&lt;/li&gt;
&lt;li&gt;AD：若包含的信息是已授权的，则AD置1；&lt;/li&gt;
&lt;li&gt;CD：若禁用安全检查，则CD置1；&lt;/li&gt;
&lt;li&gt;RCODE：返回码字段，常见值如0（NoError）、3（NXDomain）；&lt;/li&gt;
&lt;li&gt;QDCOUNT、ANCOUNT、NSCOUNT、ARCOUNT：说明了组成DNS消息的问题、回答、授权和额外信息区段中的条目数目。对于查询消息，QDCOUNT通常为1，其他三个为0；对于应答消息，ANCOUNT至少为1；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
